This file specifies which documents form the authoritative basis for the cryptographic primitives used and/or
implemented within the Cryptoe project.

All code in Cryptoe itself, insofar as it implements any function or method defined in one of these standards, MUST be
run side by side against another implementation to ensure identical outputs with identical inputs.

All code imported by Cryptoe MUST be reviewed to ensure that it follows the standard. Periodic review to ensure that
this is still the case SHOULD be undertaken when versions of imported packages change.

No cryptography code shall be added without an appropriate reference document, and all functions implementing any
cryptographic primitive that is intended to be used in a compliant manner MUST be listed in this document.

The goals of this reference and these rules regarding code in Cryptoe serve the following purposes:

1) Security and trustworthiness of implementation
2) Avoidance of hand-rolled crypto
3) Easy identification of the source document behind any given algorithm, in case that algorithm should at a later date
   be revised or become suspect [ref: withdrawn Dual-EC-DRBG controversy]
4) Easy avoidance of cryptographic primitives which the author does not wish to use, for whatever reason.



NIST SP 800-38A     Recommendation for Block Cipher Modes of Operation: Methods and Techniques
 File:      cryptoe/utils.py:
 Methods:   ctr_enc, ctr_dec

NIST SP 800-38F     Recommendation for Block Cipher Modes of Operation: Methods for Key Wrapping
 File:      cryptoe/utils.py
 Methods:   aes_wrap_key, aes_unwrap_key,
            aes_wrap_key_withpad, aes_unwrap_key_withpad, aes_unwrap_key_and_iv

NIST SP 800-108     Recommendation for Key Derivation Using Pseudorandom Functions
 File:      cryptoe/utils.py
 Methods:   ctrkdf

NIST SP 800-132     Recommendation for Password-Based Key Derivation Part 1: Storage Applications
IETF RFC 2898       PKCS #5: Password-Based Cryptography Specification (Version 2.0)
 File:      cryptoe/utils.py
 Methods:   pw2key  [NOTE: this function does not directly implement PBKDF; it's a shortcut]
 Notes:     In PKCS#5, the algorithm defined in SP800-132 was identified as PBKDF2. Cryptoe follows
            that naming in order to distinguish it from PBKDF1, however it is the same algorithm as
            defined in SP800-132.
