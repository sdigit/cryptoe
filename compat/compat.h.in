/*
 * Copyright (c) 2016 Sean Davis <dive@endersgame.net>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS `AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION);
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef DCTK_COMPAT_H
#define DCTK_COMPAT_H

#include <stdarg.h>
#include <stdint.h>
#include <time.h>
#include <math.h>

#cmakedefine HAVE_ARC4RANDOM_BUF
#cmakedefine HAVE_ARC4RANDOM_UNIFORM
#cmakedefine HAVE_ASPRINTF
#cmakedefine HAVE_EXPLICIT_BZERO
#cmakedefine HAVE_GETENTROPY
#cmakedefine HAVE_MEMMEM
#cmakedefine HAVE_REALLOCARRAY
#cmakedefine HAVE_STRCASECMP
#cmakedefine HAVE_STRLCAT
#cmakedefine HAVE_STRLCPY
#cmakedefine HAVE_STRNDUP
#cmakedefine HAVE_STRNLEN
#cmakedefine HAVE_TIMEGM
#cmakedefine HAVE_TIMINGSAFE_BCMP
#cmakedefine HAVE_TIMINGSAFE_MEMCMP
#cmakedefine HAVE_VA_COPY
#cmakedefine HAVE___VA_COPY
#cmakedefine HAVE_LOG2L

#ifndef HAVE_ARC4RANDOM_BUF

uint32_t arc4random(void);

void arc4random_buf(void *buf, size_t n);

#endif /* HAVE_ARC4RANDOM_BUF */

#ifndef HAVE_ARC4RANDOM_UNIFORM

uint32_t arc4random_uniform(uint32_t upper_bound);

#endif /* HAVE_ARC4RANDOM_UNIFORM */

#ifndef HAVE_GETENTROPY

int getentropy(void *buf, size_t len);

#endif /* HAVE_GETENTROPY */

#ifndef HAVE_ASPRINTF

int vasprintf(char **str, const char *fmt, va_list ap);

int asprintf(char **str, const char *fmt, ...);

#endif /* HAVE_ASPRINTF */

#ifndef HAVE_REALLOCARRAY

void *reallocarray(void *optr, size_t nmemb, size_t size);

#endif /* HAVE_REALLOCARRAY */

#ifndef HAVE_STRCASECMP

int strcasecmp(const char *s1, const char *s2);

int strncasecmp(const char *s1, const char *s2, size_t n);

#endif /* HAVE_STRCASECMP */

#ifndef HAVE_STRLCAT

size_t strlcat(char *dst, const char *src, size_t dsize);

#endif /* HAVE_STRLCAT */

#ifndef HAVE_STRLCPY

size_t strlcpy(char *dst, const char *src, size_t dsize);

#endif /* HAVE_STRLCPY */

#ifndef HAVE_STRNDUP

char *strndup(const char *str, size_t maxlen);

#endif /* HAVE_STRNDUP */

#ifndef HAVE_STRNLEN

size_t strnlen(const char *str, size_t maxlen);

#endif /* HAVE_STRNLEN */

#ifndef HAVE_TIMEGM

time_t timegm(struct tm *tm);

#endif /* HAVE_TIMEGM */

#ifndef HAVE_EXPLICIT_BZERO
__attribute__((weak)) void
__explicit_bzero_hook(void *buf __attribute__((unused)), size_t len __attribute__((unused)));
void explicit_bzero(void *buf, size_t len);

#endif /* HAVE_EXPLICIT_BZERO */

#ifndef HAVE_TIMINGSAFE_BCMP

int timingsafe_bcmp(const void *b1, const void *b2, size_t n);

#endif /* HAVE_TIMINGSAFE_BCMP */

#ifndef HAVE_TIMINGSAFE_MEMCMP

int timingsafe_memcmp(const void *b1, const void *b2, size_t len);

#endif /* HAVE_TIMINGSAFE_MEMCMP */

#ifndef HAVE_LOG2L
/* this doesn't do anything differently yet */
#endif /* HAVE_LOG2L */

#endif /* DCTK_COMPAT_H */
